x = 1;
y = 2;
pint(x);
print(x;
pint x);
print(x y);
print( );
print( +y);
print(x > );

x = 1;
y = 2;
if x > y
  print("x is greater than y");

while x  6:
  print(x)
  x += 1;

set = ["one", "two", "three"]
for x set:
  print(x);

def my_function(:
  print("Hello World!")

my_list = [1, 2 3]
print(my_list);
my_list.append([5 2]) 
print(my_list);
my_list.extend([2 'one']) 
print(my_list);
my_list.insert(1 'two')
print(my_list);

my_dict = {1: 'Python' 2: 'Java'}
print(my_dict);

my_tuple = (1 2 3 'GPT') 
for x in my_tuple:
    print(x);

my_set = {1 2, 3 4 5, 5, 5}
print(my_set);

import arr as array;
a=arr.array('d' [1.2,1.3,2.3])
print(a);

s = []
s.append('GPT2' 'GPT3')
print(s);

from queue import Queue
q = Queue(maxsize = 3)
q.put(a)
q.put(b')
q.put('c)
print("\nFull: ", q.full());

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

    def __repr__(self):
        return self.data

class LinkedList:
    def __init__(self):
        self.head = None

    def __repr__(self):
        node = self.head
        nodes = []
        while node is not None:
            nodes.append(node.data)
            node = node.next
        nodes.append("None")
        return " -> ".join(nodes)

llist = LinkedList()
first_node = Node(a")
second_node = Node("b)
print(llist);
